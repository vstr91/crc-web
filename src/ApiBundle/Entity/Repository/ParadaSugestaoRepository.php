<?php

namespace ApiBundle\Entity\Repository;

/**
 * ParadaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParadaSugestaoRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function listarTodosRESTAdmin($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('p')
                ->select('p.id, p.ativo, p.dataCadastro, p.dataRecebimento, '
                        . 'p.ultimaAlteracao, p.programadoPara, u.googleID AS usuarioCadastro, '
                        . 'IDENTITY(p.usuarioUltimaAlteracao) AS usuarioUltimaAlteracao, '
                        . 'IDENTITY(p.parada) AS parada, p.observacao, p.nome, p.slug, p.imagem, '
                        . 'p.latitude, p.longitude, p.taxaDeEmbarque, p.status, IDENTITY(p.bairro) AS bairro')
                ->distinct()
                ->innerJoin("ApiBundle:Usuario", "u", "WITH", "u.id = p.usuarioCadastro")
                ->where("p.ultimaAlteracao > :ultimaAlteracao")
                //->andWhere("c.programadoPara IS NULL OR c.programadoPara <= :now")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->addOrderBy('p.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso, $id){
        $qb = $this->createQueryBuilder('p')
                ->select('p.id, p.ativo, p.dataCadastro, p.dataRecebimento, '
                        . 'p.ultimaAlteracao, p.programadoPara, u.googleID AS usuarioCadastro, '
                        . 'IDENTITY(p.usuarioUltimaAlteracao) AS usuarioUltimaAlteracao, '
                        . 'IDENTITY(p.parada) AS parada, p.observacao, p.nome, p.slug, p.imagem, '
                        . 'p.latitude, p.longitude, p.taxaDeEmbarque, p.status, IDENTITY(p.bairro) AS bairro')
                ->distinct()
                ->innerJoin("ApiBundle:Usuario", "u", "WITH", "u.id = p.usuarioCadastro")
                //->where("p.ultimaAlteracao > :ultimaAlteracao")
                ->where("u.googleID = :id")
                //->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->setParameter('id', $id)
                ->addOrderBy('p.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
//        die($qb->getQuery()->getSQL());
        return $qb->getQuery()->getResult();
        
    }
    
}
