<?php

namespace ApiBundle\Entity\Repository;

/**
 * OnibusRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OnibusRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('o')
                ->select('o.id, o.ativo, o.dataCadastro, o.dataRecebimento, o.ultimaAlteracao, IDENTITY(o.usuarioCadastro) AS usuarioCadastro, '
                        . 'IDENTITY(o.usuarioUltimaAlteracao) AS usuarioUltimaAlteracao, o.programadoPara, o.sufixo, o.placa, o.ano, o.marca, o.modelo, '
                        . 'o.acessivel, o.observacao, IDENTITY(o.empresa) AS empresa')
                ->distinct()
                ->where("o.ultimaAlteracao > :ultimaAlteracao")
                ->andWhere("o.programadoPara IS NULL OR o.programadoPara <= :now")
                //->andWhere("p.ativo = 1")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->setParameter('now', new \DateTime())
                ->addOrderBy('o.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarTodosRESTAdmin($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('o')
                ->select('o.id, o.ativo, o.dataCadastro, o.dataRecebimento, o.ultimaAlteracao, IDENTITY(o.usuarioCadastro) AS usuarioCadastro, '
                        . 'IDENTITY(o.usuarioUltimaAlteracao) AS usuarioUltimaAlteracao, o.programadoPara, o.sufixo, o.placa, o.ano, o.marca, o.modelo, '
                        . 'o.acessivel, o.observacao, IDENTITY(o.empresa) AS empresa')
                ->distinct()
                ->where("o.ultimaAlteracao > :ultimaAlteracao")
                //->andWhere("o.programadoPara IS NULL OR o.programadoPara <= :now")
                //->andWhere("p.ativo = 1")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->addOrderBy('o.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
}
