<?php

namespace ApiBundle\Entity\Repository;

/**
 * SecaoItinerarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SecaoItinerarioRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function listarTodosRESTAdmin($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('si')
                ->select('si.id, si.ativo, si.dataCadastro, si.dataRecebimento, '
                        . 'si.ultimaAlteracao, si.programadoPara, IDENTITY(si.usuarioCadastro) AS usuarioCadastro, '
                        . 'IDENTITY(si.usuarioUltimaAlteracao) AS usuarioUltimaAlteracao, si.nome, si.tarifa, '
                        . 'IDENTITY(si.paradaInicial) AS paradaInicial, IDENTITY(si.paradaFinal) AS paradaFinal, IDENTITY(si.itinerario) AS itinerario')
                ->distinct()
                ->where("si.ultimaAlteracao > :ultimaAlteracao")
                //->andWhere("c.programadoPara IS NULL OR c.programadoPara <= :now")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->addOrderBy('si.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('si')
                ->select('si.id, si.ativo, si.dataCadastro, si.dataRecebimento, '
                        . 'si.ultimaAlteracao, si.programadoPara, IDENTITY(si.usuarioCadastro) AS usuarioCadastro, '
                        . 'IDENTITY(si.usuarioUltimaAlteracao) AS usuarioUltimaAlteracao, si.nome, si.tarifa, '
                        . 'IDENTITY(si.paradaInicial) AS paradaInicial, IDENTITY(si.paradaFinal) AS paradaFinal, IDENTITY(si.itinerario) AS itinerario')
                ->distinct()
                ->where("si.ultimaAlteracao > :ultimaAlteracao")
                ->andWhere("si.programadoPara IS NULL OR si.programadoPara <= :now")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->setParameter('now', new \DateTime())
                ->addOrderBy('si.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
}
